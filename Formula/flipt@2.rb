# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class FliptAT2 < Formula
  desc "A Git-first, CloudNative feature management solution"
  homepage "https://flipt.io"
  version "2.3.0"
  license "FCL-1.0-MIT"

  on_macos do
    if Hardware::CPU.intel?
      url "https://github.com/flipt-io/flipt/releases/download/v2.3.0/flipt_darwin_x86_64.tar.gz"
      sha256 "e0a077f87265e4253291d539256f477fb5e0545eb1d1da3ca9af3b82f611e0f2"

      def install
        bin.install "flipt"
        output = Utils.popen_read("SHELL=bash #{bin}/flipt completion bash")
        (bash_completion/"flipt").write output
        output = Utils.popen_read("SHELL=zsh #{bin}/flipt completion zsh")
        (zsh_completion/"_flipt").write output
      end
    end
    if Hardware::CPU.arm?
      url "https://github.com/flipt-io/flipt/releases/download/v2.3.0/flipt_darwin_arm64.tar.gz"
      sha256 "a920a435e03844008837665285dfe03a4306535408e5001eb37216c711605e79"

      def install
        bin.install "flipt"
        output = Utils.popen_read("SHELL=bash #{bin}/flipt completion bash")
        (bash_completion/"flipt").write output
        output = Utils.popen_read("SHELL=zsh #{bin}/flipt completion zsh")
        (zsh_completion/"_flipt").write output
      end
    end
  end

  on_linux do
    if Hardware::CPU.intel? && Hardware::CPU.is_64_bit?
      url "https://github.com/flipt-io/flipt/releases/download/v2.3.0/flipt_linux_x86_64.tar.gz"
      sha256 "1011fb26614f8db22b762343ff18f412ba1624780b0703e8d2b82e3561380889"
      def install
        bin.install "flipt"
        output = Utils.popen_read("SHELL=bash #{bin}/flipt completion bash")
        (bash_completion/"flipt").write output
        output = Utils.popen_read("SHELL=zsh #{bin}/flipt completion zsh")
        (zsh_completion/"_flipt").write output
      end
    end
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://github.com/flipt-io/flipt/releases/download/v2.3.0/flipt_linux_arm64.tar.gz"
      sha256 "746d89a8754b85807f407e6ffc37bc03fa3dfd32e8e01a63e198921d89b053ae"
      def install
        bin.install "flipt"
        output = Utils.popen_read("SHELL=bash #{bin}/flipt completion bash")
        (bash_completion/"flipt").write output
        output = Utils.popen_read("SHELL=zsh #{bin}/flipt completion zsh")
        (zsh_completion/"_flipt").write output
      end
    end
  end

  def post_install
    (var/"log/flipt").mkpath
  end

  service do
    run [opt_bin/"flipt", "server"]
    environment_variables PATH: std_service_path_env
    keep_alive true
    error_log_path "#{var}/log/flipt/server-stderr.log"
    log_path "#{var}/log/flipt/server-stdout.log"
  end
end
