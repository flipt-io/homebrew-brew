# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class FliptAT2 < Formula
  desc "A Git-first, CloudNative feature management solution"
  homepage "https://flipt.io"
  version "2.1.3"
  license "FCL-1.0-MIT"

  on_macos do
    if Hardware::CPU.intel?
      url "https://github.com/flipt-io/flipt/releases/download/v2.1.3/flipt_darwin_x86_64.tar.gz"
      sha256 "66b7319dce8b4f1c703fa3cd7d13abb2aaacf00e37ce629de4f9ecee72d69d01"

      def install
        bin.install "flipt"
        output = Utils.popen_read("SHELL=bash #{bin}/flipt completion bash")
        (bash_completion/"flipt").write output
        output = Utils.popen_read("SHELL=zsh #{bin}/flipt completion zsh")
        (zsh_completion/"_flipt").write output
      end
    end
    if Hardware::CPU.arm?
      url "https://github.com/flipt-io/flipt/releases/download/v2.1.3/flipt_darwin_arm64.tar.gz"
      sha256 "225b4e7c4ec79aa4f51464220cf0dfa3767c5d713d742da3eda7a0c8413759b9"

      def install
        bin.install "flipt"
        output = Utils.popen_read("SHELL=bash #{bin}/flipt completion bash")
        (bash_completion/"flipt").write output
        output = Utils.popen_read("SHELL=zsh #{bin}/flipt completion zsh")
        (zsh_completion/"_flipt").write output
      end
    end
  end

  on_linux do
    if Hardware::CPU.intel? and Hardware::CPU.is_64_bit?
      url "https://github.com/flipt-io/flipt/releases/download/v2.1.3/flipt_linux_x86_64.tar.gz"
      sha256 "3875b4516d01c17e48fef497e532b87eaa25280dbdf23480b209c09bcea68f62"
      def install
        bin.install "flipt"
        output = Utils.popen_read("SHELL=bash #{bin}/flipt completion bash")
        (bash_completion/"flipt").write output
        output = Utils.popen_read("SHELL=zsh #{bin}/flipt completion zsh")
        (zsh_completion/"_flipt").write output
      end
    end
    if Hardware::CPU.arm? and Hardware::CPU.is_64_bit?
      url "https://github.com/flipt-io/flipt/releases/download/v2.1.3/flipt_linux_arm64.tar.gz"
      sha256 "fb921f0b5fef7861e586f336610fd9561de190d1157bdefa070e11d659a9ea8e"
      def install
        bin.install "flipt"
        output = Utils.popen_read("SHELL=bash #{bin}/flipt completion bash")
        (bash_completion/"flipt").write output
        output = Utils.popen_read("SHELL=zsh #{bin}/flipt completion zsh")
        (zsh_completion/"_flipt").write output
      end
    end
  end

  def post_install
    (var/"log/flipt").mkpath
  end

  service do
    run [opt_bin/"flipt", "server"]
    environment_variables PATH: std_service_path_env
    keep_alive true
    error_log_path "#{var}/log/flipt/server-stderr.log"
    log_path "#{var}/log/flipt/server-stdout.log"
  end
end
