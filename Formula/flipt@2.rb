# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class FliptAT2 < Formula
  desc "A Git-first, CloudNative feature management solution"
  homepage "https://flipt.io"
  version "2.1.2"
  license "FCL-1.0-MIT"

  on_macos do
    if Hardware::CPU.intel?
      url "https://github.com/flipt-io/flipt/releases/download/v2.1.2/flipt_darwin_x86_64.tar.gz"
      sha256 "a65f4ba18b924e70862ac6ed7f120d7bc2f58c5e620dd71df0a107f54b27cf91"

      def install
        bin.install "flipt"
        output = Utils.popen_read("SHELL=bash #{bin}/flipt completion bash")
        (bash_completion/"flipt").write output
        output = Utils.popen_read("SHELL=zsh #{bin}/flipt completion zsh")
        (zsh_completion/"_flipt").write output
      end
    end
    if Hardware::CPU.arm?
      url "https://github.com/flipt-io/flipt/releases/download/v2.1.2/flipt_darwin_arm64.tar.gz"
      sha256 "7ff2963b0d5af472534b31ffd70875f208bdbd10fc24908ec8d13a42edbb7971"

      def install
        bin.install "flipt"
        output = Utils.popen_read("SHELL=bash #{bin}/flipt completion bash")
        (bash_completion/"flipt").write output
        output = Utils.popen_read("SHELL=zsh #{bin}/flipt completion zsh")
        (zsh_completion/"_flipt").write output
      end
    end
  end

  on_linux do
    if Hardware::CPU.intel? and Hardware::CPU.is_64_bit?
      url "https://github.com/flipt-io/flipt/releases/download/v2.1.2/flipt_linux_x86_64.tar.gz"
      sha256 "c4f4e52a35df5121e8574bc167fbe0cf5ecb7f041f44c681dabe0b95e47e2ec0"
      def install
        bin.install "flipt"
        output = Utils.popen_read("SHELL=bash #{bin}/flipt completion bash")
        (bash_completion/"flipt").write output
        output = Utils.popen_read("SHELL=zsh #{bin}/flipt completion zsh")
        (zsh_completion/"_flipt").write output
      end
    end
    if Hardware::CPU.arm? and Hardware::CPU.is_64_bit?
      url "https://github.com/flipt-io/flipt/releases/download/v2.1.2/flipt_linux_arm64.tar.gz"
      sha256 "86272e369993c3ebfb844c88d7df640ed138bc02dd5bb4a00b4b88f058fb5814"
      def install
        bin.install "flipt"
        output = Utils.popen_read("SHELL=bash #{bin}/flipt completion bash")
        (bash_completion/"flipt").write output
        output = Utils.popen_read("SHELL=zsh #{bin}/flipt completion zsh")
        (zsh_completion/"_flipt").write output
      end
    end
  end

  def post_install
    (var/"log/flipt").mkpath
  end

  service do
    run [opt_bin/"flipt", "server"]
    environment_variables PATH: std_service_path_env
    keep_alive true
    error_log_path "#{var}/log/flipt/server-stderr.log"
    log_path "#{var}/log/flipt/server-stdout.log"
  end
end
