# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class FliptAT2 < Formula
  desc "A Git-first, CloudNative feature management solution"
  homepage "https://flipt.io"
  version "2.1.1"
  license "FCL-1.0-MIT"

  on_macos do
    if Hardware::CPU.intel?
      url "https://github.com/flipt-io/flipt/releases/download/v2.1.1/flipt_darwin_x86_64.tar.gz"
      sha256 "249177f2ded8e37f4e1f4c5500086dc7aabed28a1a2e250bd86a5d08bfc4956e"

      def install
        bin.install "flipt"
        output = Utils.popen_read("SHELL=bash #{bin}/flipt completion bash")
        (bash_completion/"flipt").write output
        output = Utils.popen_read("SHELL=zsh #{bin}/flipt completion zsh")
        (zsh_completion/"_flipt").write output
      end
    end
    if Hardware::CPU.arm?
      url "https://github.com/flipt-io/flipt/releases/download/v2.1.1/flipt_darwin_arm64.tar.gz"
      sha256 "605b0b34113e4e67921dd2c69f119d027b572b2a01e519d2edd309f9fc06fe2c"

      def install
        bin.install "flipt"
        output = Utils.popen_read("SHELL=bash #{bin}/flipt completion bash")
        (bash_completion/"flipt").write output
        output = Utils.popen_read("SHELL=zsh #{bin}/flipt completion zsh")
        (zsh_completion/"_flipt").write output
      end
    end
  end

  on_linux do
    if Hardware::CPU.intel? and Hardware::CPU.is_64_bit?
      url "https://github.com/flipt-io/flipt/releases/download/v2.1.1/flipt_linux_x86_64.tar.gz"
      sha256 "0b6049c02a3276c675db00c6b549adadac5a724be74189ad3b667c2aca8a3a2b"
      def install
        bin.install "flipt"
        output = Utils.popen_read("SHELL=bash #{bin}/flipt completion bash")
        (bash_completion/"flipt").write output
        output = Utils.popen_read("SHELL=zsh #{bin}/flipt completion zsh")
        (zsh_completion/"_flipt").write output
      end
    end
    if Hardware::CPU.arm? and Hardware::CPU.is_64_bit?
      url "https://github.com/flipt-io/flipt/releases/download/v2.1.1/flipt_linux_arm64.tar.gz"
      sha256 "72f9502ad6cc9e2cbde8a99a5423f6fb39b050977bc19f82c7cb410b9a33a722"
      def install
        bin.install "flipt"
        output = Utils.popen_read("SHELL=bash #{bin}/flipt completion bash")
        (bash_completion/"flipt").write output
        output = Utils.popen_read("SHELL=zsh #{bin}/flipt completion zsh")
        (zsh_completion/"_flipt").write output
      end
    end
  end

  def post_install
    (var/"log/flipt").mkpath
  end

  service do
    run [opt_bin/"flipt", "server"]
    environment_variables PATH: std_service_path_env
    keep_alive true
    error_log_path "#{var}/log/flipt/server-stderr.log"
    log_path "#{var}/log/flipt/server-stdout.log"
  end
end
