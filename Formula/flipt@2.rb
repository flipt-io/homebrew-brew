# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class FliptAT2 < Formula
  desc "A Git-first, CloudNative feature management solution"
  homepage "https://flipt.io"
  version "2.1.0"
  license "FCL-1.0-MIT"

  on_macos do
    if Hardware::CPU.intel?
      url "https://github.com/flipt-io/flipt/releases/download/v2.1.0/flipt_darwin_x86_64.tar.gz"
      sha256 "7b5cb7ebab58859e04243f003225ff32aa0010400ed793a33755d2aec872d7a4"

      def install
        bin.install "flipt"
        output = Utils.popen_read("SHELL=bash #{bin}/flipt completion bash")
        (bash_completion/"flipt").write output
        output = Utils.popen_read("SHELL=zsh #{bin}/flipt completion zsh")
        (zsh_completion/"_flipt").write output
      end
    end
    if Hardware::CPU.arm?
      url "https://github.com/flipt-io/flipt/releases/download/v2.1.0/flipt_darwin_arm64.tar.gz"
      sha256 "7520fd3bf91d87cf6407c783ab1e9d2b55eee6d02fe0ce5ab4cc21a71b97b853"

      def install
        bin.install "flipt"
        output = Utils.popen_read("SHELL=bash #{bin}/flipt completion bash")
        (bash_completion/"flipt").write output
        output = Utils.popen_read("SHELL=zsh #{bin}/flipt completion zsh")
        (zsh_completion/"_flipt").write output
      end
    end
  end

  on_linux do
    if Hardware::CPU.intel? and Hardware::CPU.is_64_bit?
      url "https://github.com/flipt-io/flipt/releases/download/v2.1.0/flipt_linux_x86_64.tar.gz"
      sha256 "2f7bfa2b9d555a685c22ff215ef327fbbf7c4a20c64ddaa641c30057b6cfa923"
      def install
        bin.install "flipt"
        output = Utils.popen_read("SHELL=bash #{bin}/flipt completion bash")
        (bash_completion/"flipt").write output
        output = Utils.popen_read("SHELL=zsh #{bin}/flipt completion zsh")
        (zsh_completion/"_flipt").write output
      end
    end
    if Hardware::CPU.arm? and Hardware::CPU.is_64_bit?
      url "https://github.com/flipt-io/flipt/releases/download/v2.1.0/flipt_linux_arm64.tar.gz"
      sha256 "55acb4152e5804d52b4008f9bcd9699fe42ad1a8d462c3a292e9a57f41125b05"
      def install
        bin.install "flipt"
        output = Utils.popen_read("SHELL=bash #{bin}/flipt completion bash")
        (bash_completion/"flipt").write output
        output = Utils.popen_read("SHELL=zsh #{bin}/flipt completion zsh")
        (zsh_completion/"_flipt").write output
      end
    end
  end

  def post_install
    (var/"log/flipt").mkpath
  end

  service do
    run [opt_bin/"flipt", "server"]
    environment_variables PATH: std_service_path_env
    keep_alive true
    error_log_path "#{var}/log/flipt/server-stderr.log"
    log_path "#{var}/log/flipt/server-stdout.log"
  end
end
