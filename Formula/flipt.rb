# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Flipt < Formula
  desc "An open source, self-hosted feature flag solution"
  homepage "https://flipt.io"
  version "1.39.2"
  license "GPL-3.0-only"

  on_macos do
    if Hardware::CPU.arm?
      url "https://github.com/flipt-io/flipt/releases/download/v1.39.2/flipt_darwin_arm64.tar.gz"
      sha256 "7f6c2941239cfa214653517ef6ba20a17232d55237c642b4b3188a19eda294aa"

      def install
        bin.install "flipt"
        output = Utils.popen_read("SHELL=bash #{bin}/flipt completion bash")
        (bash_completion/"flipt").write output
        output = Utils.popen_read("SHELL=zsh #{bin}/flipt completion zsh")
        (zsh_completion/"_flipt").write output
      end
    end
    if Hardware::CPU.intel?
      url "https://github.com/flipt-io/flipt/releases/download/v1.39.2/flipt_darwin_x86_64.tar.gz"
      sha256 "00c5dd1c2ccd968bbb263825ade00332e08edef994bcde8c5dcdb99f6ad8be95"

      def install
        bin.install "flipt"
        output = Utils.popen_read("SHELL=bash #{bin}/flipt completion bash")
        (bash_completion/"flipt").write output
        output = Utils.popen_read("SHELL=zsh #{bin}/flipt completion zsh")
        (zsh_completion/"_flipt").write output
      end
    end
  end

  on_linux do
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://github.com/flipt-io/flipt/releases/download/v1.39.2/flipt_linux_arm64.tar.gz"
      sha256 "daff74a94e01d8e79dfc956b15630fddbba5bc24df09a12500e450a096af731b"

      def install
        bin.install "flipt"
        output = Utils.popen_read("SHELL=bash #{bin}/flipt completion bash")
        (bash_completion/"flipt").write output
        output = Utils.popen_read("SHELL=zsh #{bin}/flipt completion zsh")
        (zsh_completion/"_flipt").write output
      end
    end
    if Hardware::CPU.intel?
      url "https://github.com/flipt-io/flipt/releases/download/v1.39.2/flipt_linux_x86_64.tar.gz"
      sha256 "5960a219eba649540aa8f88ecfb4ba9c125efebed7e49d18df330e6dbeaa5d46"

      def install
        bin.install "flipt"
        output = Utils.popen_read("SHELL=bash #{bin}/flipt completion bash")
        (bash_completion/"flipt").write output
        output = Utils.popen_read("SHELL=zsh #{bin}/flipt completion zsh")
        (zsh_completion/"_flipt").write output
      end
    end
  end

  def post_install
    (var/"log/flipt").mkpath
  end

  service do
    run [opt_bin/"flipt"]
    environment_variables PATH: std_service_path_env
    keep_alive true
    error_log_path "#{var}/log/flipt/server-stderr.log"
    log_path "#{var}/log/flipt/server-stdout.log"
  end
end
